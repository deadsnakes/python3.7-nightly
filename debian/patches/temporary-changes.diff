From: Matthias Klose <doko@debian.org>
Date: Fri, 9 Feb 2018 14:24:32 -0800
Subject: temporary-changes

===================================================================
---
 Include/internal/pystate.h |  2 ++
 Include/pystate.h          | 25 +++++++++++++------------
 2 files changed, 15 insertions(+), 12 deletions(-)

diff --git a/Include/internal/pystate.h b/Include/internal/pystate.h
index 5891339..d4de31b 100644
--- a/Include/internal/pystate.h
+++ b/Include/internal/pystate.h
@@ -7,6 +7,8 @@ extern "C" {
 #include "pystate.h"
 #include "pyatomic.h"
 #include "pythread.h"
+#include "pyerrors.h"
+#include "pylifecycle.h"
 
 #include "internal/mem.h"
 #include "internal/ceval.h"
diff --git a/Include/pystate.h b/Include/pystate.h
index f16ffb8..e1c5dda 100644
--- a/Include/pystate.h
+++ b/Include/pystate.h
@@ -356,11 +356,24 @@ PyAPI_FUNC(PyObject *) PyThreadState_GetDict(void);
 PyAPI_FUNC(int) PyThreadState_SetAsyncExc(unsigned long, PyObject *);
 
 
+/* Routines for advanced debuggers, requested by David Beazley.
+   Don't use unless you know what you are doing! */
+#ifndef Py_LIMITED_API
+PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Main(void);
+PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Head(void);
+PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Next(PyInterpreterState *);
+PyAPI_FUNC(PyThreadState *) PyInterpreterState_ThreadHead(PyInterpreterState *);
+PyAPI_FUNC(PyThreadState *) PyThreadState_Next(PyThreadState *);
+
+typedef struct _frame *(*PyThreadFrameGetter)(PyThreadState *self_);
+#endif
+
 /* Variable and macro for in-line access to current thread state */
 
 /* Assuming the current thread holds the GIL, this is the
    PyThreadState for the current thread. */
 #ifdef Py_BUILD_CORE
+#  include "internal/pystate.h"
 #  define _PyThreadState_Current _PyRuntime.gilstate.tstate_current
 #  define PyThreadState_GET() \
              ((PyThreadState*)_Py_atomic_load_relaxed(&_PyThreadState_Current))
@@ -437,18 +450,6 @@ PyAPI_FUNC(PyInterpreterState *) _PyGILState_GetInterpreterStateUnsafe(void);
 PyAPI_FUNC(PyObject *) _PyThread_CurrentFrames(void);
 #endif
 
-/* Routines for advanced debuggers, requested by David Beazley.
-   Don't use unless you know what you are doing! */
-#ifndef Py_LIMITED_API
-PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Main(void);
-PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Head(void);
-PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Next(PyInterpreterState *);
-PyAPI_FUNC(PyThreadState *) PyInterpreterState_ThreadHead(PyInterpreterState *);
-PyAPI_FUNC(PyThreadState *) PyThreadState_Next(PyThreadState *);
-
-typedef struct _frame *(*PyThreadFrameGetter)(PyThreadState *self_);
-#endif
-
 #ifdef __cplusplus
 }
 #endif
